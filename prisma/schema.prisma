// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS CRÍTICAS PARA MVP
// ============================================

// 1. ARTIGOS - Coração do sistema
model Artigo {
  id                Int      @id @default(autoincrement())
  titulo            String
  slug              String   @unique
  subtitulo         String?
  descricao         String?
  conteudo          String
  componente        String   // Nome do componente React
  imagemPrincipal   String?
  imagemCapa        String?
  categoria         String?
  tags              String?  // JSON array de tags
  autor             String   @default("BrainWave Connect")
  dataPublicacao    DateTime @default(now())
  dataAtualizacao   DateTime @updatedAt
  visualizacoes     Int      @default(0)
  destaque          Boolean  @default(false)
  premium           Boolean  @default(false)
  ativo             Boolean  @default(true)
  
  // Relacionamentos
  perguntas         QuizPergunta[]
  
  @@map("artigos")
}

// 2. CONTATOS - Captura de leads e feedback
model Contato {
  id          Int      @id @default(autoincrement())
  nome        String
  email       String
  mensagem    String
  dataEnvio   DateTime @default(now())
  status      StatusContato @default(PENDENTE)
  resposta    String?
  dataResposta DateTime?
  
  @@map("contatos")
}

enum StatusContato {
  PENDENTE
  LIDO
  RESPONDIDO
}

// 3. FAQs - Perguntas Frequentes
model FAQ {
  id          Int      @id @default(autoincrement())
  pergunta    String
  resposta    String
  ordem       Int      @default(0)
  ativo       Boolean  @default(true)
  categoria   String?
  dataCriacao DateTime @default(now())
  
  @@map("faqs")
}

// 4. QUIZ - Perguntas dos quizzes
model QuizPergunta {
  id          Int      @id @default(autoincrement())
  artigoId    Int?
  pergunta    String
  ordem       Int      @default(0)
  
  // Relacionamentos
  artigo      Artigo?  @relation(fields: [artigoId], references: [id], onDelete: Cascade)
  opcoes      QuizOpcao[]
  
  @@map("quiz_perguntas")
}

// 5. OPÇÕES DO QUIZ
model QuizOpcao {
  id          Int      @id @default(autoincrement())
  perguntaId  Int
  textoOpcao  String
  correta     Boolean  @default(false)
  ordem       Int      @default(0)
  
  // Relacionamentos
  pergunta    QuizPergunta @relation(fields: [perguntaId], references: [id], onDelete: Cascade)
  
  @@map("quiz_opcoes")
}

// 6. HISTÓRICO DE BUSCAS - Analytics
model BuscaHistorico {
  id                   Int      @id @default(autoincrement())
  termoBusca           String
  resultadoEncontrado  Boolean  @default(true)
  quantidadeResultados Int      @default(0)
  dataBusca            DateTime @default(now())
  
  @@map("busca_historico")
}
